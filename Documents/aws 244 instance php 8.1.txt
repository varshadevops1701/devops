add-apt-repository ppa:ondrej/php -y


apt install software-properties-common nginx axel php8.1 php-fpm php8.1-mysql php8.1-simplexml php8.1-soap php8.1-xmlwriter php8.1-bcmath php8.1-xml php8.1-mbstring php8.1-gd php8.1-common php8.1-cli php8.1-dom php8.1-curl php8.1-intl php8.1-zip zip unzip php8.1-xsl openjdk-11-jdk && sudo apt install -y mysql-server mysql-client

apt remove --purge apache2

rm -rf /usr/sbin/apache2 /usr/lib/apache2 /etc/apache2 /usr/share/apache2 /usr/share/man/man8/apache2.8.gz

axel https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.16.0-amd64.deb
sudo apt install -f ./elasticsearch-7.16.0-amd64.deb

php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
HASH="$(wget -q -O - https://composer.github.io/installer.sig)"
php -r "if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php --install-dir=/usr/local/bin --filename=composer



https://computingforgeeks.com/how-to-install-latest-erlang-on-ubuntu-linux/
wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.9.0/rabbitmq-server-generic-unix-latest-toolchain-3.9.0.tar.xz -O - | tar -xJ
wget -O- https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | sudo apt-key add -
echo "deb https://packages.erlang-solutions.com/ubuntu focal contrib" | sudo tee /etc/apt/sources.list.d/erlang.list
sudo apt update && sudo apt install erlang -y

export PATH=$PATH:/opt/rabbitmq_server-3.9.0/sbin add in ~/.bashrc file 
source ~/.bashrc
rabbitmq-server > /dev/null 2>&1 &
rabbitmqctl start_app
rabbitmqctl add_user ubuntu ubuntu
rabbitmqctl set_user_tags ubuntu administrator
rabbitmqctl set_permissions -p / ubuntu ".*" ".*" ".*"
rabbitmqctl set_permissions -p qa1 ubuntu ".*" ".*" ".*"
rabbitmq-plugins enable --offline rabbitmq_management
sudo kill $(ps aux | grep 'rabbitmq-server' | awk '{print $2}')
rabbitmq-server > /dev/null 2>&1 &


curl -fsSL https://packages.redis.io/gpg | gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/redis.list
apt-get update && apt-get install redis -y

sudo chown -R ubuntu:www-data 244beta4
sudo usermod -a -G www-data $USER
echo 'ubuntu ALL=(ALL:ALL) /usr/sbin/nginx, /usr/bin/php, /usr/bin/mysql, /usr/local/bin/composer, /usr/sbin/crond' | EDITOR='tee -a' visudo
composer create-project -n --repository-url=https://repo.magento.com/ magento/project-enterprise-edition=2.4.4-beta4 /var/www/html/244beta4

"username": "cd53b3210bc072f4f5212cb450b370af",		OLD
"password": "256a1d434ca5b4d9bf9aa1421fcf3d42"


username": "059ba7ce1afdc5317ecce4570cecd858",		NEW
"password": "a835179cff1684379dcf76bbbd218373"

find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} +
find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} +
chown -R root:www-data .
chmod u+x bin/magento


CREATE DATABASE magento; CREATE USER 'magento'@'%' IDENTIFIED BY 'magento'; GRANT ALL PRIVILEGES ON *.* TO 'magento'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;

php bin/magento setup:install \
--base-url=https://magento244beta4.kensiumcommerce.com/ \
--db-host=localhost \
--db-name=magento \
--db-user=magento \
--db-password=magento \
--admin-firstname=admin \
--admin-lastname=admin \
--admin-email=devops@kensium.com \
--admin-user=admin \
--admin-password=admin123 \
--language=en_US \
--currency=USD \
--timezone=America/Chicago \
--use-rewrites=1 \
--search-engine=elasticsearch7 \
--elasticsearch-host=localhost \
--elasticsearch-port=9200

Admin URI: /admin_17qqzn


certbot --nginx --non-interactive --agree-tos -m devops@kensium.com --domain  magento244beta4.kensiumcommerce.com --redirect

------------------------------------------------------

cd /var/www/html/magento

mv magento beta4



mysqldump -u magento -p --single-transaction magento | gzip > magento244msi30mar22.sql.gz


mysql> drop database magento;
Query OK, 517 rows affected (6.92 sec)

mysql> create database magento;
Query OK, 1 row affected (0.01 sec)


cd /var/www/html/

composer create-project --repository-url=https://repo.magento.com/ magento/project-enterprise-edition:2.4.4 magento

php bin/magento setup:install \
--base-url=https://magento244beta4msi.kensiumcommerce.com/ \
--db-host=localhost \
--db-name=magento \
--db-user=magento \
--db-password=magento \
--admin-firstname=admin \
--admin-lastname=admin \
--admin-email=devops@kensium.com \
--admin-user=admin \
--admin-password=admin123 \
--language=en_US \
--currency=USD \
--timezone=America/Chicago \
--use-rewrites=1 \
--search-engine=elasticsearch7 \
--elasticsearch-host=localhost \
--elasticsearch-port=9200

https://magento244beta4msi.kensiumcommerce.com/admin_1axo9w

find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} +
find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} +
sudo usermod -aG www-data ubuntu
sudo addgroup www-data
chown -R ubuntu:www-data .
chmod u+x bin/magento

sudo certbot --nginx --non-interactive --agree-tos -m devops@kensium.com --domain  magento244beta4msi.kensiumcommerce.com --redirect

sudo systemctl restart mysql.service 
sudo systemctl restart nginx.service 
sudo systemctl restart php8.1-fpm.service 
sudo systemctl restart elasticsearch.service 
sudo systemctl status elasticsearch.service 
sudo systemctl enable elasticsearch.service 

php -d memory_limit=-1 bin/magento sampledata:deploy

username": "059ba7ce1afdc5317ecce4570cecd858",
"password": "a835179cff1684379dcf76bbbd218373"


php bin/magento setup:upgrade
php bin/magento module:disable Magento_TwoFactorAuth
php bin/magento setup:di:compile
php bin/magento setup:static-content:deploy -f
php bin/magento cache:clean && php bin/magento cache:flush